<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on Restless Data</title>
    <link>https://restlessdata.com.au/categories/web/</link>
    <description>Recent content in web on Restless Data</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://restlessdata.com.au/categories/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generate Web Link Preview Cards in Rmarkdown</title>
      <link>https://restlessdata.com.au/p/generate-web-link-preview-cards-in-rmarkdown/</link>
      <pubDate>Wed, 02 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://restlessdata.com.au/p/generate-web-link-preview-cards-in-rmarkdown/</guid>
      <description>library(rvest) library(dplyr) library(purrr) read_meta &amp;lt;- function(url, n = -1){ doc &amp;lt;- readLines(url, n = n) |&amp;gt; paste0(collapse = &amp;#39;&amp;#39;) # cleans parts of page where tag contents are across multiple rows nodes &amp;lt;- doc |&amp;gt; read_html() |&amp;gt; html_nodes(&amp;#39;meta, title&amp;#39;) meta_properties &amp;lt;- nodes |&amp;gt; map_dfr(~ tibble(property = html_attr(.x, &amp;#39;property&amp;#39;), content = html_attr(.x, &amp;#39;content&amp;#39;))) |&amp;gt; filter(!is.na(property)) meta_names &amp;lt;- nodes |&amp;gt; map_dfr(~ tibble(property = html_attr(.x, &amp;#39;name&amp;#39;), content = html_attr(.x, &amp;#39;content&amp;#39;))) |&amp;gt; filter(!</description>
    </item>
    
    <item>
      <title>Changing and modifying a Hugo theme on your R Blogdown site</title>
      <link>https://restlessdata.com.au/p/updating-a-blog-theme/</link>
      <pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://restlessdata.com.au/p/updating-a-blog-theme/</guid>
      <description>In an effort to resurrect my long neglected blogdown site, I decided to switch to a new theme. It is possible to use blogdown::install_theme() to get you started adding a new theme. But I wanted to do the update manually and then start to modify the theme to suit my needs. For R coders sometimes other languages and interacting with HTML and CSS can be intimidating but the results are very satisfying.</description>
    </item>
    
    <item>
      <title>Shiny and Rmarkdown Image Galleries</title>
      <link>https://restlessdata.com.au/p/shiny-image-gallery-examples/</link>
      <pubDate>Sat, 19 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://restlessdata.com.au/p/shiny-image-gallery-examples/</guid>
      <description>Some time ago I had to implement an image gallery within a shiny application. A simple grid of small thumbnail images where clicking opens the full image. Nothing complicated, but I did have several requirements:
The gallery needed to render from a folder of images The gallery interface and thumbnails needed to be responsive The gallery needed to link to other shiny UI Images come from one location, no need for generating thumbnails  There is a wide variety of javascript image gallery implementations.</description>
    </item>
    
    <item>
      <title>Another blog about a blog</title>
      <link>https://restlessdata.com.au/p/another-blog-about-a-blog/</link>
      <pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://restlessdata.com.au/p/another-blog-about-a-blog/</guid>
      <description>Currently I mostly work with R and use it for statistics, modelling, GIS and web / pdf based reporting. Therefore the choice of Blogdown seemed simple enough. You will find many existing posts about others setting up their blogs in a similar way. Further, the book blogdown: Creating Websites with R Markdown by Yihui Xie et al. covers everything you need to know about the process. Here, I am only going to discuss the few specific issues I had to deal with to get started.</description>
    </item>
    
  </channel>
</rss>
